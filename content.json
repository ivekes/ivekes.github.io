[{"title":"快捷键","date":"2019-06-05T16:16:14.000Z","path":"2019/06/06/快捷键/","text":"idea 常用命令 命令 描述 ctrl + alt + u 打开类图 alt + insert 重写父类方法 ctrl + alt + b 查看子类 ctrl + alt + z git revert ctrl + e 最近的文件 ctrl + shift + e 最近更改的文件 shift + click 关闭文件 ctrl + n 快速打开类 ctrl + shift + n 快速打开文件 ctrl + alt + t 把代码包在一个块内，例如：try/catch ctrl + enter 导入包，自动修正 ctrl + alt + l 格式化代码 ctrl + alt + i 选中的代码自动缩进编排 ctrl + alt + o 优化导入的类和包 ctrl + r 替换文本 ctrl + f 查找文本 alt + shift + c 最近的更改 alt + shift + up/down 上/下移一行 shift + f6 重构或重命名 ctrl + x 删除行 ctrl + d 复制行 ctrl + / 或 ctrl + shift + / 注释（//或者/**/） ctrl + h 显示类结构图（类的继承层次） ctrl + q 显示注释文档 alt + f1 查找代码所在位置 alt + 1 快速打开或隐藏工程面板 ctrl + alt + left/right 返回至上次浏览的位置 alt + left/right 切换代码视图 alt + up/down 在方法间快速移动定位 ctrl + shift + up/down 向上/下移动语句 f2 或 shift + f2 高亮错误或警告快速定位 ctrl + shift + f7 高亮显示所有该文本，按 Esc 高亮消失 alt + f3 逐个往下查找相同文本，并高亮显示 ctrl + shift + backspace 跳转到上次编辑的地方 ctrl + o 重写方法 alt + f7 查找整个工程中使用地某一个类、方法或者变量的位置 ctrl + shift + u 大小写转化 idea 常用配置 配置 描述 notifications 配置通知 idea 常用插件 名称 描述 bashsupport 插件 shell 支持 linux 常用命令 命令 描述 `netstat -tunlp grep 8000` 查询端口 ip addr 查看ip systemctl start xxxx 启动某服务 systemctl enable xxxx 设置某服务为开机启动 systemctl stop firewalld 关闭防火墙 docker 常用命令 命令 描述 参数 实例 docker info 显示 Docker 系统信息，包括镜像和容器数 无 docker images 列出本地镜像 docker search xxx 从Docker Hub查找镜像 docker rm 删除容器 docker rmi 删除镜像 `docker pull [OPTIONS] NAME[:TAG @DIGEST]` 从镜像仓库中拉取或者更新指定镜像 docker run [OPTIONS] IMAGE [COMMAND] [ARG…] 创建一个新的容器并运行一个命令 -a stdin: 指定标准输入输出内容类型，可选 STDIN/STDOUT/STDERR 三项；-d: 后台运行容器，并返回容器ID； -i: 以交互模式运行容器，通常与 -t 同时使用； -p: 端口映射，格式为：主机(宿主)端口:容器端口 -t: 为容器重新分配一个伪输入终端，通常与 -i 同时使用； –name=”nginx-lb”: 为容器指定一个名称； –dns 8.8.8.8: 指定容器使用的DNS服务器，默认和宿主一致； –dns-search example.com: 指定容器DNS搜索域名，默认和宿主一致； -h “mars”: 指定容器的hostname； -e username=”ritchie”: 设置环境变量； –env-file=[]: 从指定文件读入环境变量； –cpuset=”0-2” or –cpuset=”0,1,2”: 绑定容器到指定CPU运行； -m :设置容器使用内存最大值； –net=”bridge”: 指定容器的网络连接类型，支持 bridge/host/none/container: 四种类型； –link=[]: 添加链接到另一个容器； –expose=[]: 开放一个端口或一组端口； docker run –name mynginx -d nginx:latest使用docker镜像nginx:latest以后台模式启动一个容器,并将容器命名为mynginx docker ps [OPTIONS] 列出容器 -a :显示所有的容器，包括未运行的。-f :根据条件过滤显示的内容。–format :指定返回值的模板文件。-l :显示最近创建的容器。-n :列出最近创建的n个容器。–no-trunc :不截断输出。-q :静默模式，只显示容器编号。-s :显示总的文件大小。 docker ps -n 5列出最近创建的5个容器信息 hexo 常用命令 命令 描述 `hexo d hexo deploy` 重新部署到服务器 `hexo g hexo generate` 生成静态页面 hexo clean 清除缓存文件 (db.json) 和已生成的静态文件 (public) hexo new &quot;postName&quot; 新建一个名称为 postName 的文章","tags":[{"name":"idea,linux,docker,hexo","slug":"idea-linux-docker-hexo","permalink":"https://ivekes.github.io/tags/idea-linux-docker-hexo/"}]},{"title":"rocketmq点滴","date":"2019-06-01T06:14:02.000Z","path":"2019/06/01/rocketmq点滴/","text":"环境 centos7 内存2g jdk1.8 rocketmq4.4.0 说明：参考资料 rocketmq官网 吾同树 下载 &amp; 安装 下载 源码下载 zip包下载 rocketmq-externals下载 解压 1234$ unzip rocketmq-all-4.4.0-source-release.zip$ cd rocketmq-all-4.4.0/$ mvn -Prelease-all -DskipTests clean install -U$ cd distribution/target/apache-rocketmq 启动 nameserver 123$ nohup sh bin/mqnamesrv &amp;$ tail -f ~/logs/rocketmqlogs/namesrv.logThe Name Server boot success... 启动 broker 123$ nohup sh bin/mqbroker -n localhost:9876 &amp;$ tail -f ~/logs/rocketmqlogs/broker.log The broker[%s, 172.30.30.233:10911] boot success... 发送 &amp; 接收消息 123456$ export NAMESRV_ADDR=localhost:9876$ sh bin/tools.sh org.apache.rocketmq.example.quickstart.ProducerSendResult [sendStatus=SEND_OK, msgId= ...$ sh bin/tools.sh org.apache.rocketmq.example.quickstart.ConsumerConsumeMessageThread_%d Receive New Messages: [MessageExt... 安装 rocketmq-console rocketmq-externals 中有很多项目，我们这里只需要 rocketmq-console， 它是依赖于springboot-1.4.3.RELEASE 的 springboot 项目，导入 idea,修改配置文件 application.properties，把服务器地址修改成自己的，然后直接运行app.java 就可以了 1rocketmq.config.namesrvAddr=mynode7:9876 也可将项目打成 jar 包，并运行 jar 文件 1234$ mvn clean package -Dmaven.test.skip=true$ java -jar target/rocketmq-console-ng-1.0.1.jar# 如果配置文件没有填写Name Server$ java -jar target/rocketmq-console-ng-1.0.1.jar --rocketmq.config.namesrvAddr='mynode7:9876' 启动成功后，输入 http://localhost:8080/ ,即可进入管理后台操作 停止服务 1234567$ sh bin/mqshutdown brokerThe mqbroker(36695) is running...Send shutdown request to mqbroker(36695) OK$ sh bin/mqshutdown namesrvThe mqnamesrv(36664) is running...Send shutdown request to mqnamesrv(36664) OK 异常 &amp; 解决方案启动的过程中有可能遇到 broker 启动不起来的情况，修改$ROCKETMQ_HOME/bin/runbroker.sh 123$ vim bin/runbroker.shJAVA_OPT=\"$&#123;JAVA_OPT&#125; -server -Xms512m -Xmx512m -Xmn512m\"JAVA_OPT=\"$&#123;JAVA_OPT&#125; -XX:MaxDirectMemorySize=1g\" 命令行管理工具1234567891011121314151617181920212223242526272829303132333435363738394041424344454647$ sh bin/mqadminThe most commonly used mqadmin commands are: updateTopic Update or create topic deleteTopic Delete topic from broker and NameServer. updateSubGroup Update or create subscription group deleteSubGroup Delete subscription group from broker. updateBrokerConfig Update broker's config updateTopicPerm Update topic perm topicRoute Examine topic route info topicStatus Examine topic Status info topicClusterList get cluster info for topic brokerStatus Fetch broker runtime status data queryMsgById Query Message by Id queryMsgByKey Query Message by Key queryMsgByUniqueKey Query Message by Unique key queryMsgByOffset Query Message by offset printMsg Print Message Detail printMsgByQueue Print Message Detail sendMsgStatus send msg to broker. brokerConsumeStats Fetch broker consume stats data producerConnection Query producer's socket connection and client version consumerConnection Query consumer's socket connection, client version and subscription consumerProgress Query consumers's progress, speed consumerStatus Query consumer's internal data structure cloneGroupOffset clone offset from other group. clusterList List all of clusters topicList Fetch all topic list from name server updateKvConfig Create or update KV config. deleteKvConfig Delete KV config. wipeWritePerm Wipe write perm of broker in all name server resetOffsetByTime Reset consumer offset by timestamp(without client restart). updateOrderConf Create or update or delete order conf cleanExpiredCQ Clean expired ConsumeQueue on broker. cleanUnusedTopic Clean unused topic on broker. startMonitoring Start Monitoring statsAll Topic and Consumer tps stats allocateMQ Allocate MQ checkMsgSendRT check message send response time clusterRT List All clusters Message Send RT getNamesrvConfig Get configs of name server. updateNamesrvConfig Update configs of name server. getBrokerConfig Get broker config by cluster or special broker! queryCq Query cq command. sendMessage Send a message consumeMessage Consume messageSee 'mqadmin help &lt;command&gt;' for more information on a specific command","tags":[{"name":"rocketmq","slug":"rocketmq","permalink":"https://ivekes.github.io/tags/rocketmq/"}]},{"title":"centos7新机及克隆","date":"2019-05-25T05:25:06.000Z","path":"2019/05/25/centos7新机及克隆/","text":"预安装工具1$ yum install -y wget vim vim 设置,添加以下配置 12345$ vi /etc/vimrcset nu #设置行号set autoindent #自动缩进set ts=4 #这个是设置tap的大小为4个空格set mouse=c #打开鼠标 修改为阿里镜像库 备份原来的 yum 源 1$ cp /etc/yum.repos.d/CentOS-Base.repo /etc/yum.repos.d/CentOS-Base.repo.bak 设置 aliyun 的 yum 源 1$ wget -O /etc/yum.repos.d/CentOS-Base.repo http://mirrors.aliyun.com/repo/Centos-7.repo 添加 epel 源 1$ wget -P /etc/yum.repos.d/ http://mirrors.aliyun.com/repo/epel-7.repo 清理缓存并生成新的缓存 12$ yum clean all$ yum makecache 克隆后的设置1234/etc/sysconfig/network-scripts/ifcfg-eth0文件中HWADDR、UUID删除，更改IPADDR/etc/udev/rules.d/70-persistent-net.rules 文件删除/etc/sysconfig/network文件中 修改 HOSTNAME=node1/etc/hosts 追加 192.168.132.10 node1 网卡配置 12345678910DEVICE=eth0HWADDR=00:0C:29:EF:9C:61TYPE=EthernetUUID=533e89f3-06fc-4924-8deb-4bdb202f2bf0ONBOOT=yesNM_CONTROLLED=yesBOOTPROTO=staticIPADDR=192.168.157.11NETMASK=255.255.255.0GATEWAY=192.168.157.2 安装其他工具yum install -y xz lrzsz gcc-c++ pcre-devel openssl openssl-devel man man-pages ntp ncurses-devel gdb glibc-common unixODBC unixODBC-devel kde-l10n-Chinese yum install -y g++ autoconf automake libtool cmake zlib1g-dev pkg-config libssl-dev yum install -y libcurl-devel yum install -y svn ncurses-devel gcc* yum install -y lzo-devel zlib-devel autoconf automake libtool cmake openssl-devel yum install -y docbook-style-xsl yum install -y xmlto yum install -y zlib-devel openssl-devel cpio expat-devel gettext-devel curl-devel perl-ExUtils-CBuilder perl-ExUtils-MakeMaker yum install -y perl-ExtUtils-CBuilder perl-ExtUtils-MakeMaker yum groupinstall -y chinese-support","tags":[{"name":"centos7","slug":"centos7","permalink":"https://ivekes.github.io/tags/centos7/"}]},{"title":"zookeper点滴","date":"2019-05-25T05:23:10.000Z","path":"2019/05/25/zookeper点滴/","text":"环境 centos7 内存2g jdk1.8 zookeeper3.5.5 说明：参考资料 zookeeper官网 努力改个网名 下载 &amp; 安装 下载 tar包下载 解压 1$ tar zxvf apache-zookeeper-3.5.5-bin.tar.gz -C zookeeper 配置 在 zookeeper 目录下创建目录 data 和 logs 两个目录存储数据和日志 12$ mkdir data$ mkdir logs 在 conf 目录下新建 zoo.cfg 文件，写入以下内容保存 1234tickTime=2000dataDir=/tools/zookeeper/datadataLogDir=/tools/zookeeper/logsclientPort=2181 启动 &amp; 停止 1234$ ./zkServer.sh start$ ./zkServer.sh stop$ ./zkServer.sh restart$ ./zkServer.sh status 集群模式","tags":[{"name":"zookeeper","slug":"zookeeper","permalink":"https://ivekes.github.io/tags/zookeeper/"}]},{"title":"springcloud点滴","date":"2019-05-25T05:19:47.000Z","path":"2019/05/25/springcloud点滴/","text":"","tags":[{"name":"springcloud","slug":"springcloud","permalink":"https://ivekes.github.io/tags/springcloud/"}]},{"title":"Hello World","date":"2019-05-25T04:44:06.048Z","path":"2019/05/25/hello-world/","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","tags":[]}]